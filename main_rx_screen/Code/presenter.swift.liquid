//
//  {{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright Â© {{ year }} {{ developer.company }}. All rights reserved.
//

import RxSwift
import RxCocoa

protocol {{ module_info.name }}PresenterOutput: AnyObject {
    var rx_props: Observable<{{ module_info.name }}ViewController.Props> { get }
}

final class {{ module_info.name }}Presenter {

    // MARK: - Properties

    private let disposeBag = DisposeBag()
    private let service: {{ module_info.name }}ServiceProvider
    private let router: {{ module_info.name }}InternalRouter

    private let propsRelay = BehaviorRelay<{{ module_info.name }}ViewController.Props>(value: .default)

    // MARK: - Lifecycle

    init(service: {{ module_info.name }}ServiceProvider, router: {{ module_info.name }}InternalRouter) {
        self.service = service
        self.router = router

        setup()
    }

    // MARK: - Private Methods

    private func setup() {
        // propsRelay.mutate {
        //     $0.<#parameter#> = <#value#>
        // }
    }
}

// MARK: - {{ module_info.name }}PresenterOutput

extension {{ module_info.name }}Presenter: {{ module_info.name }}PresenterOutput {
    var rx_props: Observable<{{ module_info.name }}ViewController.Props> {
        propsRelay.asObservable()
    }
}
