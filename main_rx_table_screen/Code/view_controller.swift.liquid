//
//  {{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright Â© {{ year }} {{ developer.company }}. All rights reserved.
//

import UIKit
import SnapKit
import RxSwift

final class {{ module_info.name }}ViewController: UIViewController {

    // MARK: - Properties

    private let tableAdapter: {{ module_info.name }}TableAdapter

    private let disposeBag = DisposeBag()
    private var props: Props = .default {
        didSet { render() }
    }
    private lazy var tableView = with(UITableView()) {
        $0.dataSource = tableAdapter
        $0.delegate = tableAdapter
    }

    // MARK: - Lifecycle

    init(tableAdapter: {{ module_info.name }}TableAdapter) {
        self.tableAdapter = tableAdapter
        super.init(nibName: nil, bundle: nil)
    }

    required init?(coder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

    override func viewDidLoad() {
        super.viewDidLoad()
    }

    private func render() {}
}

// MARK: - Props

extension {{ module_info.name }}ViewController {
    struct Props: Mutable {
        // var <#name#>: <#type#>

        static var `default` = Props()
    }
}

// MARK: - Bind

extension {{ module_info.name }}ViewController {
    public func bind(to presenter: {{ module_info.name }}Presenter) {
        func holdRef(_: Any) {}

        _ = presenter.rx_props.bind { [weak self] props in
            holdRef(presenter)
            self?.props = props
        }
        .disposed(by: disposeBag)
    }
}
